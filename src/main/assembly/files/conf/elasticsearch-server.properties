# This file contains the setting for the embedded Elastic Search server. This server will NOT network
# with other ES instances. 

# Sets the data directory
path.data = ./data

# Disable discovery of other ES nodes
discovery.zen.ping.multicast.enabled=false 
node.local = true

# For development work, the path property should be set to the target directory as this directory
# (and our previous index data) will be deleted with a 'clean' operation.
path.home = .


# This is the name of the development cluster
cluster.name = elasticsearch


# Expose an http connection point
http.enabled = true
http.port = 9200
http.cors.enabled = true

# The server node will bind to an externally accessible IP address
network.host = 0.0.0.0

## Allow this node to be eligible as a master node
node.master = true

# The ES server node will store index data.
node.data = true


# Set the default number of shards and replicas
index.number_of_shards = 1
index.number_of_replicas = 1


# Tell ES to index the _id property
index.mapping._id.indexed = true

# Where will the "temporary" index data be stored? If the memory store is used, we configure it to
# use memory directly; bypassing the Java Heap. Because of this, we do not need to set up our JVM's
# memory requirements to include ElasticSearch storage. 
index.store.type = niofs


# The embedded Elastic Search server binds to port 9310.
transport.tcp.port = 9300

# Discovery type specified in Maven config.
discovery.type = zen


# Gateway snapshots and indices using S3
gateway.type = local

# Allocate 50% of heap to search and 50% to index
indices.memory.index_buffer_size = 50%

# Flush logs late
index.translog.flush_threshold_ops = 50000

# Search thread pool
threadpool.search.type = fixed
threadpool.search.size = 20
threadpool.search.queue_size = 250

# Index thread pool
threadpool.index.type = fixed
threadpool.index.size = 60
threadpool.index.queue_size = 200